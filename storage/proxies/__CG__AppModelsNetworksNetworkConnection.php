<?php

namespace DoctrineProxies\__CG__\App\Models\Networks;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class NetworkConnection extends \App\Models\Networks\NetworkConnection implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'affiliate_id', 'publisher_id', 'is_sync', 'network', 'influencer', 'sync_failed_at', 'sync_failed_message', 'fields', 'created_at', 'updated_at'];
        }

        return ['__isInitialized__', 'id', 'affiliate_id', 'publisher_id', 'is_sync', 'network', 'influencer', 'sync_failed_at', 'sync_failed_message', 'fields', 'created_at', 'updated_at'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (NetworkConnection $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getAffiliateId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffiliateId', []);

        return parent::getAffiliateId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffiliateId($affiliate_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffiliateId', [$affiliate_id]);

        return parent::setAffiliateId($affiliate_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisherId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisherId', []);

        return parent::getPublisherId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublisherId($publisher_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublisherId', [$publisher_id]);

        return parent::setPublisherId($publisher_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsSync()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsSync', []);

        return parent::getIsSync();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsSync($is_sync)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsSync', [$is_sync]);

        return parent::setIsSync($is_sync);
    }

    /**
     * {@inheritDoc}
     */
    public function getNetwork()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNetwork', []);

        return parent::getNetwork();
    }

    /**
     * {@inheritDoc}
     */
    public function setNetwork($network)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNetwork', [$network]);

        return parent::setNetwork($network);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfluencer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfluencer', []);

        return parent::getInfluencer();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfluencer($influencer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfluencer', [$influencer]);

        return parent::setInfluencer($influencer);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncFailedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncFailedAt', []);

        return parent::getSyncFailedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncFailedAt($sync_failed_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncFailedAt', [$sync_failed_at]);

        return parent::setSyncFailedAt($sync_failed_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncFailedMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncFailedMessage', []);

        return parent::getSyncFailedMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncFailedMessage($sync_failed_message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncFailedMessage', [$sync_failed_message]);

        return parent::setSyncFailedMessage($sync_failed_message);
    }

    /**
     * {@inheritDoc}
     */
    public function getFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFields', []);

        return parent::getFields();
    }

    /**
     * {@inheritDoc}
     */
    public function addField($field)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addField', [$field]);

        return parent::addField($field);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created_at]);

        return parent::setCreatedAt($created_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updated_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated_at]);

        return parent::setUpdatedAt($updated_at);
    }

}
